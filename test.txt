李柏霖
https://imtt2.dd.qq.com/sjy.00009/sjy.00004/16891/apk/7C648CD045087A419B518AEA8E1D97B9.apk?fsname=com.tencent.mobileqq_9.1.60.apk
https://imtt2.dd.qq.com/sjy.00009/sjy.00004/16891/apk/AF19925914009B3B691345B64EFE9FE0.apk?fsname=cn.wenyu.bodian_4.9.5.apk
cmd.exe /C "cd /D C:\code\renderdoc\build\renderdoccmd && C:\Users\HCKTest\Downloads\cmake-3.22.6-windows-x86_64\bin\cmake.exe -E make_directory libs/lib/arm64-v8a && C:\Users\HCKTest\Downloads\cmake-3.22.6-windows-x86_64\bin\cmake.exe -E make_directory obj && C:\Users\HCKTest\Downloads\cmake-3.22.6-windows-x86_64\bin\cmake.exe -E make_directory bin && C:\Users\HCKTest\Downloads\cmake-3.22.6-windows-x86_64\bin\cmake.exe -E copy C:/code/renderdoc/build/lib/libVkLayer_GLES_RenderDoc.so libs/lib/arm64-v8a/libVkLayer_GLES_RenderDoc.so && C:\Users\HCKTest\Downloads\cmake-3.22.6-windows-x86_64\bin\cmake.exe -E copy C:/code/renderdoc/build/lib/librenderdoccmd.so libs/lib/arm64-v8a/librenderdoccmd.so && C:\Users\HCKTest\Downloads\cmake-3.22.6-windows-x86_64\bin\cmake.exe -E copy C:/code/renderdoc/build/renderdoccmd/libs/lib/arm64-v8a/wrap.sh libs/lib/arm64-v8a/wrap.sh && C:\Users\HCKTest\AppData\Local\Android\Sdk\build-tools\30.0.3\aapt package -f -m -S res -J src -M AndroidManifest.xml -I C:/Users/HCKTest/AppData/Local/Android/Sdk/platforms/android-30/android.jar && "C:\Program Files\Java\jdk-1.8\bin\javac" -d ./obj -source 1.7 -target 1.7 -bootclasspath "C:\Program Files\Java\jdk-1.8/jre/lib/rt.jar" -classpath C:/Users/HCKTest/AppData/Local/Android/Sdk/platforms/android-30/android.jar\;obj -sourcepath src src/org/renderdoc/renderdoccmd/*.java && C:\Users\HCKTest\AppData\Local\Android\Sdk\build-tools\30.0.3\d8.bat --output ./bin/ ./obj/org/renderdoc/renderdoccmd/arm64/*.class && C:\Users\HCKTest\AppData\Local\Android\Sdk\build-tools\30.0.3\aapt package -f -M AndroidManifest.xml --version-code 138 --version-name c3f1ccc38ea8de99172caef6e33148c22bd5490d -S res -I C:/Users/HCKTest/AppData/Local/Android/Sdk/platforms/android-30/android.jar -F RenderDocCmd-unaligned.apk bin libs && C:\Users\HCKTest\AppData\Local\Android\Sdk\build-tools\30.0.3\zipalign -f 4 RenderDocCmd-unaligned.apk RenderDocCmd.apk && C:\Users\HCKTest\AppData\Local\Android\Sdk\build-tools\30.0.3\apksigner.bat sign --ks C:/code/renderdoc/build/renderdoccmd/debug.keystore --ks-pass pass:android --key-pass pass:android --ks-key-alias rdocandroidkey RenderDocCmd.apk && C:\Users\HCKTest\Downloads\cmake-3.22.6-windows-x86_64\bin\cmake.exe -E copy RenderDocCmd.apk C:/code/renderdoc/build/bin/org.renderdoc.renderdoccmd.arm64.apk"

echo "2025.05.21"
adb push config.pbtx /data/local/tmp/config.pbtx
adb shell am profile start com.tencent.mm /data/local/tmp/myapp_trace.trace
adb shell -tt "cat /data/local/tmp/config.pbtx | perfetto --txt -c - -o /data/misc/perfetto-traces/trace"
adb shell am profile stop com.tencent.mm
adb pull /data/local/tmp/myapp_trace.trace .
adb shell date >ps.txt
adb shell ps -A -T >>ps.txt
adb shell logcat -b all -d >logcat.txt
adb shell dumpsys dropbox -p >db.txt
adb pull /data/misc/perfetto-traces/trace .
start .
pause


adb shell -tt su root /data/local/tmp/perfd/simpleperf_arm64 record -p com.tencent.mm --call-graph dwarf --trace-offcpu -o /data/local/tmp/simpleperf.trace -f 1000 -e cpu-clock --log-to-android-buffer
adb shell simpleperf report-sample --protobuf --show-callchain -i /data/local/tmp/simpleperf.trace -o /data/local/tmp/as.trace
adb pull /data/local/tmp/as.trace .
start .
pause

#include <stdio.h>
#include <inttypes.h>
#include <capstone/capstone.h>

int main() {
    csh handle;
    cs_insn *insn;
    size_t count;

    // 初始化 Capstone，选择 ARM64 架构
    if (cs_open(CS_ARCH_ARM64, CS_MODE_ARM, &handle) != CS_ERR_OK) {
        printf("Failed to initialize Capstone\n");
        return -1;
    }

    // 设置反汇编选项（可选）
    cs_option(handle, CS_OPT_DETAIL, CS_OPT_ON);  // 启用详细模式（可获取寄存器、内存访问等信息）

    // 要反汇编的二进制指令（ARM64 机器码）
    uint8_t code[] = {
        0x91, 0x00, 0x03, 0xe0,  // ADD X0, X0, X3
        0x12, 0x80, 0x5f, 0xd6   // RET
    };
    size_t code_len = sizeof(code);

    // 反汇编
    count = cs_disasm(handle, code, code_len, 0x1000, 0, &insn);
    if (count > 0) {
        for (size_t i = 0; i < count; i++) {
            printf("0x%" PRIx64 ":\t%s\t\t%s\n", insn[i].address, insn[i].mnemonic, insn[i].op_str);
        }
        cs_free(insn, count);  // 释放内存
    } else {
        printf("Failed to disassemble\n");
    }

    cs_close(&handle);  // 关闭 Capstone
    return 0;
}